from modules.createToken import generate_token
import os
# This is a config file for both app.py (aka qrFileServer).
# qrFileServer configs

# Authentication config
# 
# Authentication is done by checking 2 places
#  - In the url query string called token or the token variable in cookies.
#  - HTTP Auth
#
# The URL query token is the simplest method and should be randomly generated
# for each session unless an environment variable is set.

# By default, use the environment variable. 
if 'QR_FILE_SERVER_TOKEN' in os.environ:
    token = os.getenv('QR_FILE_SERVER_TOKEN')
else:
    # Generate a 16 character alphanumeric token for file access.
    token = generate_token(16)

# Users and password for http auth is stored in a dictionary
users = {
    "token": token,
}


# Configure this to customize the qrcode to display. The default should fetch
# what gunicorn binded to and generate urls based on that.
bind = os.getenv('QR_FILE_SERVER_BIND').split(',')
if os.getenv('QR_FILE_SERVER_SECURE') == 'true':
    urls = [f'https://{addr}/?token={token}' for addr in bind]
else:
    urls = [f'http://{addr}/?token={token}' for addr in bind]


# Make qrFileServer download only with readonly. By default 
# this will pass the environment variable to readonly.
readonly = False if os.getenv('QR_FILE_SERVER_READONLY') == 'false' else True


